// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"context"
	"github.com/wolfogre/funeypot/internal/app/config"
	"github.com/wolfogre/funeypot/internal/app/dashboard"
	"github.com/wolfogre/funeypot/internal/app/model"
	"github.com/wolfogre/funeypot/internal/app/server"
)

// Injectors from wire.go:

func NewEntrypoint(ctx context.Context, cfg *config.Config) (*Entrypoint, error) {
	ssh := cfg.Ssh
	database := cfg.Database
	modelDatabase, err := model.NewDatabase(ctx, database)
	if err != nil {
		return nil, err
	}
	ipgeo := cfg.Ipgeo
	querier, err := newIpgeoQuerier(ipgeo)
	if err != nil {
		return nil, err
	}
	abuseipdb := cfg.Abuseipdb
	client := newAbuseipdbClient(abuseipdb)
	handler := server.NewHandler(ctx, modelDatabase, querier, client)
	sshServer, err := server.NewSshServer(ssh, handler)
	if err != nil {
		return nil, err
	}
	http := cfg.Http
	configDashboard := cfg.Dashboard
	dashboardServer, err := dashboard.NewServer(configDashboard, modelDatabase, querier)
	if err != nil {
		return nil, err
	}
	httpServer := server.NewHttpServer(http, handler, dashboardServer)
	ftp := cfg.Ftp
	ftpServer := server.NewFtpServer(ftp, handler)
	entrypoint := newEntrypoint(sshServer, httpServer, ftpServer)
	return entrypoint, nil
}
